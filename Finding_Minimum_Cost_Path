#include<bits/stdc++.h>
using namespace std;
#define R 3
#define C 3
 
int min(int x, int y, int z);
 
int minCost(int cost[R][C], int m, int n)
{
    int i, j;
    int tc[R][C];  
 	tc[0][0] = cost[0][0];
  for (i = 1, j = 1; i <= m, j<= n; i++, j++)
  {
    	tc[i][0] = tc[i-1][0] + cost[i][0];     // After Coping The (0, 0) Element From The First Matrix Fill All [i][0] with The Formula
    	tc[0][j] = tc[0][j-1] + cost[0][j];	    // After Coping The (0, 0) Element From The First Matrix Fill All [0][j] with The Formula
	}
  //Now Fill The Rest Elemets In Their Respective Positions
  for (i = 1; i <= m; i++)
    for (j = 1; j <= n; j++)
        tc[i][j] = min(tc[i-1][j-1], tc[i-1][j], tc[i][j-1]) + cost[i][j];
 
    return tc[m][n];
}
int min(int x, int y, int z)
{
   if (x < y)
      return (x < z)? x : z;
   else
      return (y < z)? y : z;
}
int main()
{
   int cost[R][C] = { {1, 2, 3},
                      {4, 8, 2},
                      {1, 5, 3} };
   cout<<minCost(cost, 2, 2);      // To Find The Minimum Cost By Moving From (0, 0) To (2, 2) Is Of Course (1+ 2+ 2+ 3) = 8;
   return 0;
}
